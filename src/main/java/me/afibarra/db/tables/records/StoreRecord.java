/*
 * This file is generated by jOOQ.
 */
package me.afibarra.db.tables.records;


import java.time.LocalDateTime;

import me.afibarra.db.tables.Store;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreRecord extends UpdatableRecordImpl<StoreRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.store.store_id</code>.
     */
    public void setStoreId(UByte value) {
        set(0, value);
    }

    /**
     * Getter for <code>sakila.store.store_id</code>.
     */
    public UByte getStoreId() {
        return (UByte) get(0);
    }

    /**
     * Setter for <code>sakila.store.manager_staff_id</code>.
     */
    public void setManagerStaffId(UByte value) {
        set(1, value);
    }

    /**
     * Getter for <code>sakila.store.manager_staff_id</code>.
     */
    public UByte getManagerStaffId() {
        return (UByte) get(1);
    }

    /**
     * Setter for <code>sakila.store.address_id</code>.
     */
    public void setAddressId(UShort value) {
        set(2, value);
    }

    /**
     * Getter for <code>sakila.store.address_id</code>.
     */
    public UShort getAddressId() {
        return (UShort) get(2);
    }

    /**
     * Setter for <code>sakila.store.last_update</code>.
     */
    public void setLastUpdate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>sakila.store.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UByte> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreRecord
     */
    public StoreRecord() {
        super(Store.STORE);
    }

    /**
     * Create a detached, initialised StoreRecord
     */
    public StoreRecord(UByte storeId, UByte managerStaffId, UShort addressId, LocalDateTime lastUpdate) {
        super(Store.STORE);

        setStoreId(storeId);
        setManagerStaffId(managerStaffId);
        setAddressId(addressId);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }
}
