/*
 * This file is generated by jOOQ.
 */
package me.afibarra.db.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import me.afibarra.db.tables.Payment;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentRecord extends UpdatableRecordImpl<PaymentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.payment.payment_id</code>.
     */
    public void setPaymentId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>sakila.payment.payment_id</code>.
     */
    public UShort getPaymentId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>sakila.payment.customer_id</code>.
     */
    public void setCustomerId(UShort value) {
        set(1, value);
    }

    /**
     * Getter for <code>sakila.payment.customer_id</code>.
     */
    public UShort getCustomerId() {
        return (UShort) get(1);
    }

    /**
     * Setter for <code>sakila.payment.staff_id</code>.
     */
    public void setStaffId(UByte value) {
        set(2, value);
    }

    /**
     * Getter for <code>sakila.payment.staff_id</code>.
     */
    public UByte getStaffId() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>sakila.payment.rental_id</code>.
     */
    public void setRentalId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sakila.payment.rental_id</code>.
     */
    public Integer getRentalId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sakila.payment.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>sakila.payment.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>sakila.payment.payment_date</code>.
     */
    public void setPaymentDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>sakila.payment.payment_date</code>.
     */
    public LocalDateTime getPaymentDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>sakila.payment.last_update</code>.
     */
    public void setLastUpdate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>sakila.payment.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UShort> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentRecord
     */
    public PaymentRecord() {
        super(Payment.PAYMENT);
    }

    /**
     * Create a detached, initialised PaymentRecord
     */
    public PaymentRecord(UShort paymentId, UShort customerId, UByte staffId, Integer rentalId, BigDecimal amount, LocalDateTime paymentDate, LocalDateTime lastUpdate) {
        super(Payment.PAYMENT);

        setPaymentId(paymentId);
        setCustomerId(customerId);
        setStaffId(staffId);
        setRentalId(rentalId);
        setAmount(amount);
        setPaymentDate(paymentDate);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }
}
